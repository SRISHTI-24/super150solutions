import java.util.*;
public class Main {
    public class Node {
        int data;
        Node left;
        Node right;
    }

    public Node root;
    Scanner s = new Scanner(System.in);

    public Main() {
        this.root = Create_Tree();
    }

    private Node Create_Tree() {
        Queue<Node> qu = new LinkedList<>();
        Node nd = new Node();
        nd.data = s.nextInt();
        root = nd;
        qu.add(nd);
        while (!qu.isEmpty()) {
            Node a = qu.remove();
            int x1 = s.nextInt();
            int x2 = s.nextInt();
            if (x1 != -1) {
                Node node = new Node();
                node.data = x1;
                a.left = node;
                qu.add(node);
            }
            if (x2 != -1) {
                Node node = new Node();
                node.data = x2;
                a.right = node;
                qu.add(node);
            }
        }
        return root;
    }

    
    static boolean mirrortree(Node r,Node k)
    {
        if(r==null && k==null)
        {
            return true;
        }
        if(r==null || k==null || r.data!=k.data)
        {
            return false;
        }
        
        
        boolean left=mirrortree(r.left,k.right);
        boolean right=mirrortree(r.right,k.left);
        
        return left && right;
    }

    public static void main(String[] args) {
        Main mm = new Main();
        if(mirrortree(mm.root,mm.root))
        {
            System.out.println("YES");
        }
        else
        {
            
            System.out.println("NO");
        }
    }
}
