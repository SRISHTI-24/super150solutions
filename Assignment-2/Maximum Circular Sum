#include<iostream>
#include<numeric>
#include<algorithm>
using namespace std;
int kadane(int array[], int n)
{
    int max_so_far = 0, max_ending_here = 0;
    for (int i = 0; i < n; i++)
    {
        max_ending_here = max_ending_here + array[i];
        if (max_ending_here < 0)
            max_ending_here = 0;
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here;
    }
    return max_so_far;
}
int MaxSumCircular(int array[], int n)
{
    int kadane_sum = kadane(array, n);
    int wrap_sum = 0;
    for (int i=0; i<n; i++)
    {
        wrap_sum += array[i]; 
        array[i] = -array[i];
    }
    wrap_sum = wrap_sum + kadane(array, n);
    if(wrap_sum > kadane_sum)
    {
      return wrap_sum;
    }
    else
    {
      return kadane_sum;
    }
}
int main() {
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int input_array[n];
		for(int i=0;i<n;i++)
		cin>>input_array[i];
		cout<<MaxSumCircular(input_array,n)<<endl;
    
	}
	return 0;
}
